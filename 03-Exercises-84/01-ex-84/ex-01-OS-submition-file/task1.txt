#-------------------------------------------------------------------------------------------------------------------------------------------------------#

#### Task 1 #### 
Implement a semaphore by using the Test-And-Set (TAS) spinlock presented in class (you can use the
code provided). The semaphore should support basic wait (decrement) and signal (increment) operations.
Implement the functions in the provided tas semaphore.h.

Mandatory Functions:
void semaphore_init ( semaphore * sem , int initial_value );
/*
* Initializes the semaphore pointed to by ’sem ’ with the specified initial value .
*/

void semaphore_wait ( semaphore * sem); // Decrement the semaphore value ( wait operation )

void semaphore_signal ( semaphore * sem); // Increment the semaphore value ( signal operation )

Listing 1: Mandatory functions for Task 1
Submit your implementation in tas semaphore.c and any additional files (if there are any).

#-------------------------------------------------------------------------------------------------------------------------------------------------------#